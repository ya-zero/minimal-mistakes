на момент запуска скрипта ключ должен быть вставлен.
можно сделать проверку

1) config.vm.box = "generic/ubuntu1904"
2) требуемые пакеты.
  2.1 dpkg -i libccid libpcsclite1 pcscd pcsc-tools opensc gnupg-pkcs11-scd  rpm
  2.2 wget https://download.rutoken.ru/Rutoken/PKCS11Lib/1.9.15.0/Linux/x64/librtpkcs11ecp_1.9.15.0-1_amd64.deb
           def install /usr/lib/librtpkcs11ecp.so
3) проверить есть ли пакеты 
  3.1) dpkg -s gnupg gpg-agent / gnupg не ниже 2.1.9
  3.2) dpkg -s gnupg-pkcs11-scd  / не ниже 0.9.2
  
4) конфигурим
   gnupg-pkcs11-scd
   gpg-agent
в домашней дериктории пользователя 
./gnupg/gnupg-pkcs11-scd.conf
debug-all
verbose
log-file /root/gnupg-pkcs11-scd.log
providers p1
provider-p1-library /usr/lib/librtpkcs11ecp.so 


.gnupg/gpg-agent.conf
scdaemon-program /usr/bin/gnupg-pkcs11-scd
pinentry-program /usr/bin/pinentry-tty

5)
gnupg-pkcs11-scd --daemon
gpg-agent  --daemon (по идее будет запущен)  можно  сделать gpgconf --kill all
gpg-agent  --server

для генерации opengpg ключа нужен KEY-FRIEDNLY  его можно взять из логов log-file /root/gnupg-pkcs11-scd.log 

gpg-connect-agent  'SCD LEARN' /bye | grep KEY-FRIEDNLY  | awk '{print $3}'

gpg --batch --expert --full-generate-key  ./gpg_batch
./gpg_batch
 %echo Generating a OpenPGP key
 Key-Type: 1
 Key-Grip: 88E23DFBAA20FA2F8D42A2F62C24E409E8417662
 Key-usage: sign,cert
 Name-Real: name real
 Name-Comment: name comment
 Name-Email: test@pochta.ru
 #Passphrase: 12345678
 %commit
 %done

что бы подписать нужен файл экпорт производиться по части описания Joe Tester (with stupid passphrase) <test@pochta.ru>
или по id ключа.
root@ubuntu1904:~/.gnupg# gpg --list-keys
/root/.gnupg/pubring.kbx
------------------------
pub   rsa2048 2019-09-30 [SC]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>      E15216754A57D7448C83DD4B257BB235AD7BAFF3       
uid           [ultimate] sept_29@pochta.ru (0) <sept_29@pochta.ru>


gpg --export -a E15216754A57D7448C83DD4B257BB235AD7BAFF3 > RPM-GPG-KEY-faleman 
or
gpg --export -a 'test@pochta.ru' > RPM-GPG-KEY-faleman


rpm --import RPM-GPG-KEY-faleman


rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'
   >>examples>>> gpg-pubkey-77b915ba-5d932ddb --> gpg(Joe Tester (with stupid passphrase) <test@pochta.ru>)


/root/.rpmmacros
%_gpg_name Joe Tester (with stupid passphrase) <sept_29@pochta.ru>

rpmsign -addsign ./*rpm

P.S.
https://gist.github.com/fernandoaleman/1376720
https://github.com/alonbl/gnupg-pkcs11-scd/issues/21
https://craftware.xyz/securitybricks/2017/07/17/using-tokens-in-Ubuntu-with-pgp.html

P.S.  если вы сами генериурете ключи то нужно сделать 
нужен пакет dpkg -i  libengine-pkcs11-openssl

новая инициализаиця   
SO-PIN
pkcs11-tool --module /usr/lib/librtpkcs11ecp.so --init-token --label rutoken_blue --so-pin 87654321

user pin
pkcs11-tool --module /usr/lib/librtpkcs11ecp.so --init-pin --login  -p 12345678 --so-pin 87654321


Create an RSA public and private key pair - This will be generated on the token and will not leave the device:(Это будет сгенерировано на токене и не покинет устройство)
pkcs11-tool --module /usr/lib/librtpkcs11ecp.so --login --keypairgen --key-type RSA:2048 --id 1 --label "sept_29@pochta.ru" -p 12345678
 

Create an X509 certificate - We’ll create a self-signed certificate for the keypair we just generated. This eToken only accepts certificates in DER format, so we need to convert it to DER. We can do this from within OpenSSL prompt: 
Создайте сертификат X509. Мы создадим самоподписанный сертификат для только что сгенерированной пары ключей. Этот eToken принимает сертификаты только в формате DER, поэтому нам нужно преобразовать его в DER. Мы можем сделать это из приглашения OpenSSL:

openssl
  OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre MODULE_PATH:/usr/lib/librtpkcs11ecp.so
(dynamic) Dynamic engine loading support
[Success]: SO_PATH:/usr/lib/x86_64-linux-gnu/engines-1.1/pkcs11.so
[Success]: ID:pkcs11
[Success]: LIST_ADD:1
[Success]: LOAD
[Success]: MODULE_PATH:/usr/lib/librtpkcs11ecp.so
Loaded: (pkcs11) pkcs11 engine
OpenSSL>



OpenSSL> req -engine pkcs11 -new -key slot_0-id_01 -keyform engine -x509 -out my.pem -text
engine "pkcs11" set.
Enter PKCS#11 token PIN for rutoken_29:
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:RU
State or Province Name (full name) [Some-State]:1
Locality Name (eg, city) []:2
Organization Name (eg, company) [Internet Widgits Pty Ltd]:3
Organizational Unit Name (eg, section) []:4
Common Name (e.g. server FQDN or YOUR name) []:5
Email Address []:1@1.com



OpenSSL> x509 -in my.pem -out my.der -outform der


pkcs11-tool --module /usr/lib/librtpkcs11ecp.so --login --write-object my.der --type cert --id 01 --label "sept_29@pochta.ru"
Using slot 0 with a present token (0x0)
Logging in to "rutoken_29".
WARNING: user PIN to be changed
Please enter User PIN:
Created certificate:
Certificate Object; type = X.509 cert
  label:      sept_29@pochta.ru
  subject:    DN: C=RU, ST=1, L=2, O=3, OU=4, CN=5/emailAddress=1@1.com
  ID:         01

